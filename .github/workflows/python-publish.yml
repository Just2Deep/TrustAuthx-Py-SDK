# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python3 -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Check for errors and create issue
      if: ${{ failure() }}
      run: |
        # Set your GitHub username and repository 
        REPO_OWNER=One-Click-Auth
        REPO_NAME=TrustAuthx-Py-SDK
        
        # Set the issue title and body
        ISSUE_TITLE="PyPI upload failed"
        ISSUE_BODY="The upload to PyPI failed with a 400 Bad Request error. Please update the package version and try again."
        
        # Create the issue
        curl --request POST \
             --url https://api.github.com/repos/One-Click-Auth/TrustAuthx-Py-SDK/issues \
             --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
             --header 'content-type: application/json' \
             --data '{"title":"'$ISSUE_TITLE'","body":"'$ISSUE_BODY'"}'
